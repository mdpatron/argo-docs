{"name":"COVID Data Dictionary","version":"0.8","references":{"script":{"patient":{"age":["//code#12321312 'hello world'\r\ncode#293847397 'goodbye cruel world'"]},"follow_up":{"anatomic_site_progression_or_recurrences":["(function validate() {\r\n        let result = {valid: true, message: \"Ok\"};\r\n\r\n        /* required field, cannot be null */\r\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\r\n\r\n        const isRequired = diseaseStatus.match(/(progression)$/);\r\n\r\n        // checks for a string just consisting of whitespace\r\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n        if (isRequired && (!$field || checkforEmpty($field))){\r\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\r\n        }\r\n\r\n        return result;\r\n    })()","(function validate() {\r\n        let result = {valid: true, message: \"Ok\"};\r\n\r\n        /* required field, cannot be null */\r\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\r\n\r\n        const isRequired = diseaseStatus === \"relapse\";\r\n\r\n        // checks for a string just consisting of whitespace\r\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n        if (isRequired && (!$field || checkforEmpty($field))){\r\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\r\n        }\r\n\r\n        return result;\r\n    })()"],"method_of_progression_status":["(function validate() {\r\n        let result = {valid: true, message: \"Ok\"};\r\n\r\n        /* required field, cannot be null */\r\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\r\n\r\n        const isRequired = diseaseStatus.match(/(progression)$/);\r\n\r\n        // checks for a string just consisting of whitespace\r\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n        if (isRequired && (!$field || checkforEmpty($field))){\r\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' is of type 'progression'.` }\r\n        }\r\n\r\n        return result;\r\n    })()","(function validate() {\r\n        let result = {valid: true, message: \"Ok\"};\r\n\r\n        /* required field, cannot be null */\r\n        const diseaseStatus = $row.disease_status_at_followup.trim().toLowerCase();\r\n\r\n        const isRequired = diseaseStatus === \"relapse\";\r\n\r\n        // checks for a string just consisting of whitespace\r\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n        if (isRequired && (!$field || checkforEmpty($field))){\r\n            result = {valid: false, message: `'${$name}' is a required field if 'disease_status_at_followup' set to 'relapse'.` }\r\n        }\r\n\r\n        return result;\r\n    })()"]},"sample_registration":{},"specimen":{}}},"schemas":[{"name":"patient","description":"The collection of data elements with demographic information about a patient.","fields":[{"name":"patient_id","description":"Unique identifier of the patient, assigned by the data provider.","required":true,"valueType":"string","meta":{"primaryId":true}},{"name":"age","description":"Age of the patient at the time of initial encounter.","required":false,"valueType":"integer","restrictions":{"script":"age"}},{"name":"administrative_gender","valueType":"string","description":"Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.","required":true,"restrictions":{"codeList":["Male","Female","Other","Unknown"]}},{"name":"race","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The race codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"string","required":false,"restrictions":{"codeList":["American Indian or Alaska Native","Asian","Black or African American","Native Hawaiian or Other Pacific Islander","White"]}},{"name":"ethnicity","description":"Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. The ethnicity codes used to represent these concepts are based upon the CDC Race and Ethnicity Code Set Version 1.0.","valueType":"string","required":false,"restrictions":{"codeList":["Hispanic or Latino","Non Hispanic or Latino"]}},{"name":"zip_code","description":"Five digit zip code.","valueType":"string","required":true}]},{"name":"patient_vital_status","description":"An indicator of whether the patient is alive or dead.","meta":{"parent":"patient"},"fields":[{"name":"vital_status","description":"Donor's last known state of living or deceased.","required":true,"restrictions":{"codeList":["Alive","Deceased","Unknown"]},"valueType":"string","meta":{"core":true}},{"name":"cause_of_death","description":"Indicates the cause of a patient's death.","meta":{"core":true,"notes":"Cause of death is only required to be submitted if the patient is deceased."},"valueType":"string","required":false,"restrictions":{"codeList":["Died of COVID-19","Died of other reasons"]}}]},{"name":"patient_identification","description":"Personally identifiable information about a patient.","meta":{"parent":"patient"},"fields":[{"name":"family_name","description":"The part of a name that links to the genealogy.","valueType":"string","meta":{"core":true}},{"name":"given_name(s)","description":"Given names (not always 'first'). Includes middle names.","valueType":"string","meta":{"core":true}},{"name":"address_line","description":"This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.","valueType":"string","meta":{"core":true}},{"name":"address_city","description":"The name of the city, town, suburb, village or other community or delivery center.","valueType":"string","meta":{"core":true}},{"name":"address_state","description":"US 2 letter state code.","valueType":"string","meta":{"core":true}},{"name":"primary_phone_number","description":"Preferred phone number for the patient.","valueType":"string","meta":{"core":true}}]},{"name":"condition","description":"The collection of data elements related to a condition. A condition can be either a diagnosis or part of an ongoing problem list.","meta":{"parent":"patient"},"fields":[{"name":"condition_id","valueType":"ID","description":"Unique identifier assigned to the condition.","required":true,"meta":{"validationDependency":true}},{"name":"code","valueType":"string","description":"The code to represent the diagnosis or problem.","required":true,"restrictions":{"codeList":["ICD-10-CM code","SNOMED CT disorder code"],"notes":"This field accepts either ICD-10-CM or SNOMED CT codes."}},{"name":"category","description":"Condition category which distinguishes between a diagnosis or a problem.","restrictions":{"codeList":["problem-list-item","encounter-diagnosis"]},"valueType":"string","meta":{"validationDependency":false,"notes":"Include all codes defined in http://terminology.hl7.org/CodeSystem/condition-category.\n"}},{"name":"recorded_date","description":"The date that the condition was recorded.","restrictions":{"required":true},"valueType":"string","meta":{"validationDependency":true,"notes":"This is different from the condition onset date which could be a period of time prior to the date recorded by the provider."}},{"name":"onset_date","description":"An estimate or actual date that the patient reported experiencing the condition.","required":true,"valueType":"string","meta":{"validationDependency":true}},{"name":"clinical_status","description":"The clinical status of the condition. (Reference source: FHIR Condition clinical status from http://hl7.org/fhir/condition-definitions.html#Condition.clinicalStatus).","valueType":"string","restrictions":{"required":true,"codeList":["active","recurrence","relapse","inactive","remission","resolved"]},"meta":{"validationDependency":true,"notes":"The clinical status value set terms are described at http://hl7.org/fhir/valueset-condition-clinical.html."}}]},{"name":"c19_diagnosis","description":"Parameters for COVID-19 diagnosis.","meta":{"parent":"condition"},"fields":[{"name":"code","valueType":"string","description":"Codes to represent a COVID-19 diagnosis.","restrictions":{"codeList":["ICD-10-CM #U0.71 (COVID-19)","SNOMED-CT #840539006 (COVID-19)","SNOMED-CT #840544004 (Suspected COVID-19)"]},"meta":{"notes":"This field accepts either ICD-10-CM or SNOMED CT codes."}},{"name":"category","description":"Condition category which distinguishes between a diagnosis or a problem.","required":false,"restrictions":{"codeList":["encounter-diagnosis"]},"valueType":"string"}]}]}
